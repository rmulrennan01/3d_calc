/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useState, useRef } from 'react'
import * as THREE from 'three';
import { useFrame } from '@react-three/fiber';
import './Model.css'; 


import { useGLTF, useHelper, Html} from '@react-three/drei'
//import { AxesHelper } from 'three';







function Model({ ...props }){
  const btn_press = (input) =>{
    props.callBack(input); 
  
  };


  const group = useRef()
  const { nodes, materials } = useGLTF('/calc_model_2.glb')

  const key_base_material = new THREE.MeshStandardMaterial({color: 0xD1CDBC}); 
  const key_material = new THREE.MeshStandardMaterial({color: 0x000000});
  const screen_material = new THREE.MeshBasicMaterial({color: 0x3B3E37});

  const ref_4 = useRef(); 
  const ref_5 = useRef();
  const display_text_ref = useRef(); 

  //useHelper(ref_4,AxesHelper, 'cyan' ); 
  useFrame(()=> {
   // console.log(display_text_ref); 
   
   }
    
 
   )

  return (
    <group ref={group} {...props} dispose={null} rotation={[0,0,0]}>
    <mesh ref={ref_5} geometry={nodes.BODY.geometry} material={nodes.BODY.material} position={[-0.98, 0.38, 0.83]} rotation={[0.33, 0, 0]} />
    <mesh geometry={nodes.SCREEN.geometry} material={screen_material} position={[-0.81, 1.11, -0.94]} rotation={[0.33, 0, 0]} scale={[0.98, 1, 1]} > 
        <Html ref={display_text_ref} className="model__display" position={[0.5 , .5, .01]} rotation={[-Math.PI/2,0,0]} transform  scale={.02}>
                <div className="model__display">
                  <div className="model__display__formula"> 
                      {props.displayTop}
                  </div> 
                      
                  <div className="model__display__answer"> 
                      {props.displayBottom}
                  </div> 
                  
                </div>
        </Html>
    </mesh> 
    
    <group ref={ref_4} onClick={(e)=>props.number(4)}> 
      <mesh geometry={nodes['4_BASE'].geometry} material={key_base_material} position={[-0.86, 0.76, 0.08]} rotation={[0.33, 0, 0]} scale={[0.9, 1, 0.88]} />
      <mesh geometry={nodes['4'].geometry} material={key_material} position={[-0.81, 0.82, 0.06]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.87, -0.1, -0.8]} />
      {/*<axesHelper /> */}
    </group> 
    <group onClick={(e)=>props.number(7)}>
      <mesh geometry={nodes['7_BASE'].geometry} material={key_base_material} position={[-0.86, 0.87, -0.24]} rotation={[0.33, 0, 0]} scale={[0.9, 1, 0.88]} />
      <mesh geometry={nodes['7'].geometry} material={key_material} position={[-0.8, 0.93, -0.26]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.87, -0.1, -0.8]} />
    </group> 
    
    <mesh geometry={nodes.COVER.geometry} material={nodes.COVER.material} position={[-0.88, 0.49, -2.05]} rotation={[1.64, 0, 0]} />
    <group onClick={(e)=>props.clear()}> 
      <mesh geometry={nodes.C_BASE.geometry} material={key_base_material} position={[-0.86, 0.98, -0.55]} rotation={[0.33, 0, 0]} scale={[0.9, 1, 0.9]} />
      <mesh geometry={nodes.C.geometry} material={key_material} position={[-0.82, 1.04, -0.58]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.85, -0.11, -0.79]} />
    </group> 
    <group onClick={(e)=>props.operator('√')}>
      <mesh geometry={nodes.SQRT_BASE.geometry} material={key_base_material} position={[-0.52, 0.98, -0.55]} rotation={[0.33, 0, 0]} scale={[0.88, 1, 0.9]} />
      <mesh geometry={nodes.SQRT.geometry} material={nodes.SQRT.material} position={[-0.48, 1.04, -0.57]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.85, -0.11, -0.78]} />
    </group>
    <group onClick={(e)=>props.number(8)}>
      <mesh geometry={nodes['8_BASE'].geometry} material={key_base_material} position={[-0.52, 0.87, -0.24]} rotation={[0.33, 0, 0]} scale={[0.88, 1, 0.88]} />
      <mesh geometry={nodes['8'].geometry} material={nodes['8'].material} position={[-0.47, 0.93, -0.26]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.87, -0.1, -0.8]} />
    </group>
    <group onClick={(e)=>props.number(5)}>
      <mesh geometry={nodes['5_BASE'].geometry} material={key_base_material} position={[-0.52, 0.76, 0.08]} rotation={[0.33, 0, 0]} scale={[0.88, 1, 0.88]} />
      <mesh geometry={nodes['5'].geometry} material={nodes['5'].material} position={[-0.47, 0.82, 0.06]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.87, -0.1, -0.8]} />
    </group> 
    <group onClick={(e)=>props.number(2)}>
      <mesh geometry={nodes['2_BASE001'].geometry} material={key_base_material} position={[-0.52, 0.65, 0.39]} rotation={[0.33, 0, 0]} scale={[0.88, 1, 0.88]} />
      <mesh geometry={nodes['2'].geometry} material={nodes['2'].material} position={[-0.46, 0.71, 0.37]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.89, -0.1, -0.82]} />
    </group>
    <group onClick={(e)=>props.number(0)}>
      <mesh geometry={nodes['0_BASE'].geometry} material={key_base_material} position={[-0.86, 0.54, 0.72]} rotation={[0.33, 0, 0]} scale={[0.9, 1, 0.9]} />
      <mesh geometry={nodes['0'].geometry} material={nodes['0'].material} position={[-0.81, 0.6, 0.69]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.89, -0.16, -0.82]} />
    </group> 
    <group onClick={(e)=>props.number(1)}>
      <mesh geometry={nodes['1_BASE'].geometry} material={key_base_material} position={[-0.86, 0.65, 0.39]} rotation={[0.33, 0, 0]} scale={[0.9, 1, 0.88]} />
      <mesh geometry={nodes['1'].geometry} material={nodes['1'].material} position={[-0.77, 0.71, 0.37]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.87, -0.1, -0.8]} />
    </group> 
    <group onClick={(e)=>props.decimal()}>
      <mesh geometry={nodes.DECIMAL_BASE.geometry} material={key_base_material} position={[-0.52, 0.54, 0.72]} rotation={[0.33, 0, 0]} scale={[0.88, 1, 0.9]} />
      <mesh geometry={nodes.DECIMAL.geometry} material={nodes.DECIMAL.material} position={[-0.43, 0.6, 0.69]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.21, -0.05, -0.16]} />
    </group>
    <group onClick={(e)=>props.negative()}> 
      <mesh geometry={nodes.NEG_BASE.geometry} material={key_base_material} position={[-0.19, 0.54, 0.72]} rotation={[0.33, 0, 0]} scale={[0.88, 1, 0.9]} />
      <mesh geometry={nodes.NEG.geometry} material={nodes.NEG.material} position={[-0.16, 0.62, 0.64]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.77, -0.13, -0.71]} />
    </group> 
    <group onClick={(e)=>props.number(3)}>
      <mesh geometry={nodes['3_BASE'].geometry} material={key_base_material} position={[-0.19, 0.65, 0.39]} rotation={[0.33, 0, 0]} scale={[0.88, 1, 0.88]} />
      <mesh geometry={nodes['3'].geometry} material={nodes['3'].material} position={[-0.13, 0.71, 0.37]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.87, -0.1, -0.8]} />
    </group> 
    <group onClick={(e)=>props.number(6)}>
      <mesh geometry={nodes['6_BASE'].geometry} material={key_base_material} position={[-0.19, 0.76, 0.08]} rotation={[0.33, 0, 0]} scale={[0.88, 1, 0.88]} />
      <mesh geometry={nodes['6'].geometry} material={nodes['6'].material} position={[-0.14, 0.82, 0.06]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.88, -0.1, -0.81]} />
    </group> 
    <group onClick={(e)=>props.number(9)}>
      <mesh geometry={nodes['9_BASE'].geometry} material={key_base_material} position={[-0.19, 0.87, -0.24]} rotation={[0.33, 0, 0]} scale={[0.88, 1, 0.88]} />
      <mesh geometry={nodes['9'].geometry} material={nodes['9'].material} position={[-0.14, 0.93, -0.26]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.87, -0.1, -0.8]} />
    </group> 
    <group onClick={(e)=>props.operator('^')}>
      <mesh geometry={nodes.PWR_BASE.geometry} material={key_base_material} position={[-0.19, 0.98, -0.55]} rotation={[0.33, 0, 0]} scale={[0.88, 1, 0.9]} />
      <mesh geometry={nodes.PWR.geometry} material={nodes.PWR.material} position={[-0.12, 1.05, -0.59]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.51, -0.1, -0.48]} />
    </group>
    <group onClick={(e)=>props.operator('÷')}>
      <mesh geometry={nodes.DIV_BASE.geometry} material={key_base_material} position={[0.15, 0.98, -0.55]} rotation={[0.33, 0, 0]} scale={[0.9, 1, 0.9]} />
      <mesh geometry={nodes.DIV.geometry} material={nodes.DIV.material} position={[0.18, 1.03, -0.55]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.68, -0.13, -0.63]} />
    </group>
    <group onClick={(e)=>props.operator('x')}>
      <mesh geometry={nodes.X_BASE.geometry} material={key_base_material} position={[0.15, 0.87, -0.24]} rotation={[0.33, 0, 0]} scale={[0.9, 1, 0.88]} />
      <mesh geometry={nodes.X.geometry} material={nodes.X.material} position={[0.22, 0.94, -0.28]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.72, -0.1, -0.67]} />
    </group> 
    <group onClick={(e)=>props.operator('-')}>
      <mesh geometry={nodes.MINUS_BASE.geometry} material={key_base_material} position={[0.15, 0.76, 0.08]} rotation={[0.33, 0, 0]} scale={[0.9, 1, 0.88]} />
      <mesh geometry={nodes.MINUS.geometry} material={nodes.MINUS.material} position={[0.17, 0.81, 0.08]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.21, -0.13, -0.13]} />
    </group> 
    <group onClick={(e)=>props.operator('+')}>
      <mesh geometry={nodes.ADD_BASE.geometry} material={key_base_material} position={[0.15, 0.65, 0.39]} rotation={[0.33, 0, 0]} scale={[0.9, 1, 0.88]} />
      <mesh geometry={nodes.ADD.geometry} material={nodes.ADD.material} position={[0.17, 0.69, 0.43]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.79, -0.1, -0.8]} />
    </group> 
    <group onClick={(e)=>props.operator('=')}>
      <mesh geometry={nodes.EQUALS_BASE.geometry} material={key_base_material} position={[0.15, 0.54, 0.72]} rotation={[0.33, 0, 0]} scale={[0.9, 1, 0.9]} />
      <mesh geometry={nodes.EQUALS.geometry} material={nodes.EQUALS.material} position={[0.21, 0.6, 0.71]} rotation={[-2.81, 0, -Math.PI]} scale={[-0.31, -0.09, -0.35]} />
    </group> 
  </group>

  )
}



export default Model 
useGLTF.preload('/calc_model_2.glb')
